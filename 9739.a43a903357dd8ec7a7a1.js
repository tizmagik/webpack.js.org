(self.webpackChunk=self.webpackChunk||[]).push([[9739],{9739:function(n,s,a){"use strict";a.r(s),s.default='<p>If you\'ve been following the guides from the start, you will now have a small project that showsÂ "Hello webpack". Now let\'s try to incorporate some other assets, like images, to see how they can be handled.</p> <p>Prior to webpack, front-end developers would use tools like <a href="https://gruntjs.com/">grunt</a> and <a href="https://gulpjs.com/">gulp</a> to process these assets and move them from their <code>/src</code> folder into their <code>/dist</code> or <code>/build</code> directory. The same idea was used for JavaScript modules, but tools like webpack will <strong>dynamically bundle</strong> all dependencies (creating what\'s known as a <a href="/concepts/dependency-graph">dependency graph</a>). This is great because every module now <em>explicitly states its dependencies</em> and we\'ll avoid bundling modules that aren\'t in use.</p> <p>One of the coolest webpack features is that you can also <em>include any other type of file</em>, besides JavaScript, for which there is a loader or built-in <a href="/guides/asset-modules/">Asset Modules</a> support. This means that the same benefits listed above for JavaScript (e.g. explicit dependencies) can be applied to everything used in building a website or web app. Let\'s start with CSS, as you may already be familiar with that setup.</p> <h2 id="setup">Setup<a href="#setup" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>Let\'s make a minor change to our project before we get started:</p> <p><strong>dist/index.html</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">&#x3C;!DOCTYPE html>\n</span><span class="token prefix unchanged"> </span><span class="token line">&#x3C;html>\n</span><span class="token prefix unchanged"> </span><span class="token line">  &#x3C;head>\n</span><span class="token prefix unchanged"> </span><span class="token line">    &#x3C;meta charset="utf-8" />\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    &#x3C;title>Getting Started&#x3C;/title>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    &#x3C;title>Asset Management&#x3C;/title>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  &#x3C;/head>\n</span><span class="token prefix unchanged"> </span><span class="token line">  &#x3C;body>\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    &#x3C;script src="main.js">&#x3C;/script>\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    &#x3C;script src="bundle.js">&#x3C;/script>\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  &#x3C;/body>\n</span><span class="token prefix unchanged"> </span><span class="token line">&#x3C;/html></span></span></code></pre> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const path = require(\'path\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">module.exports = {\n</span><span class="token prefix unchanged"> </span><span class="token line">  entry: \'./src/index.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">  output: {\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    filename: \'main.js\',\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    filename: \'bundle.js\',\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    path: path.resolve(__dirname, \'dist\'),\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">};</span></span></code></pre> <h2 id="loading-css">Loading CSS<a href="#loading-css" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>In order to <code>import</code> a CSS file from within a JavaScript module, you need to install and add the <a href="/loaders/style-loader">style-loader</a> and <a href="/loaders/css-loader">css-loader</a> to your <a href="/configuration/module"><code>module</code> configuration</a>:</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev style-loader css-loader</code></pre> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const path = require(\'path\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">module.exports = {\n</span><span class="token prefix unchanged"> </span><span class="token line">  entry: \'./src/index.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">  output: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    filename: \'bundle.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">    path: path.resolve(__dirname, \'dist\'),\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  module: {\n</span><span class="token prefix inserted">+</span><span class="token line">    rules: [\n</span><span class="token prefix inserted">+</span><span class="token line">      {\n</span><span class="token prefix inserted">+</span><span class="token line">        test: /\\.css$/i,\n</span><span class="token prefix inserted">+</span><span class="token line">        use: [\'style-loader\', \'css-loader\'],\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span><span class="token prefix inserted">+</span><span class="token line">    ],\n</span><span class="token prefix inserted">+</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">};</span></span></code></pre> <p>Module loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result (resource with applied transformations) to the next one, and so forth. Finally, webpack expects JavaScript to be returned by the last loader in the chain.</p> <p>The above order of loaders should be maintained: <a href="/loaders/style-loader"><code>\'style-loader\'</code></a> comes first and followed by <a href="/loaders/css-loader"><code>\'css-loader\'</code></a>. If this convention is not followed, webpack is likely to throw errors.</p> <aside class="tip"><h6 class="tip__prefix">tip</h6><p>webpack uses a regular expression to determine which files it should look for and serve to a specific loader. In this case, any file that ends with <code>.css</code> will be served to the <code>style-loader</code> and the <code>css-loader</code>.</p></aside> <p>This enables you to <code>import \'./style.css\'</code> into the file that depends on that styling. Now, when that module is run, a <code>&#x3C;style></code> tag with the stringified css will be inserted into the <code>&#x3C;head></code> of your html file.</p> <p>Let\'s try it out by adding a new <code>style.css</code> file to our project and import it in our <code>index.js</code>:</p> <p><strong>project</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> webpack-demo\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- package.json\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- webpack.config.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /dist\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- bundle.js\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- index.html\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /src\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   |- style.css\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   |- index.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /node_modules</span></span></code></pre> <p><strong>src/style.css</strong></p> <pre><code class="hljs language-css"><span class="token selector">.hello</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre> <p><strong>src/index.js</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import _ from \'lodash\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import \'./style.css\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">function component() {\n</span><span class="token prefix unchanged"> </span><span class="token line">  const element = document.createElement(\'div\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  // Lodash, now imported by this script\n</span><span class="token prefix unchanged"> </span><span class="token line">  element.innerHTML = _.join([\'Hello\', \'webpack\'], \' \');\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  element.classList.add(\'hello\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return element;\n</span><span class="token prefix unchanged"> </span><span class="token line">}\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">document.body.appendChild(component());</span></span></code></pre> <p>Now run your build command:</p> <pre><code class="hljs language-bash">$ <span class="token function">npm</span> run build\n\n<span class="token punctuation">..</span>.\n<span class="token punctuation">[</span>webpack-cli<span class="token punctuation">]</span> Compilation finished\nasset bundle.js <span class="token number">72.6</span> KiB <span class="token punctuation">[</span>emitted<span class="token punctuation">]</span> <span class="token punctuation">[</span>minimized<span class="token punctuation">]</span> <span class="token punctuation">(</span>name: main<span class="token punctuation">)</span> <span class="token number">1</span> related asset\nruntime modules <span class="token number">1000</span> bytes <span class="token number">5</span> modules\norphan modules <span class="token number">326</span> bytes <span class="token punctuation">[</span>orphan<span class="token punctuation">]</span> <span class="token number">1</span> module\ncacheable modules <span class="token number">539</span> KiB\n  modules by path ./node_modules/ <span class="token number">538</span> KiB\n    ./node_modules/lodash/lodash.js <span class="token number">530</span> KiB <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n    ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js <span class="token number">6.67</span> KiB <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n    ./node_modules/css-loader/dist/runtime/api.js <span class="token number">1.57</span> KiB <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n  modules by path ./src/ <span class="token number">965</span> bytes\n    ./src/index.js + <span class="token number">1</span> modules <span class="token number">639</span> bytes <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n    ./node_modules/css-loader/dist/cjs.js<span class="token operator">!</span>./src/style.css <span class="token number">326</span> bytes <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\nwebpack <span class="token number">5.4</span>.0 compiled successfully <span class="token keyword">in</span> <span class="token number">2231</span> ms</code></pre> <p>Open up <code>dist/index.html</code> in your browser again and you should see that <code>Hello webpack</code> is now styled in red. To see what webpack did, inspect the page (don\'t view the page source, as it won\'t show you the result, because the <code>&#x3C;style></code> tag is dynamically created by JavaScript) and look at the page\'s head tags. It should contain the style block that we imported in <code>index.js</code>.</p> <p>Note that you can, and in most cases should, <a href="/plugins/mini-css-extract-plugin/#minimizing-for-production">minimize css</a> for better load times in production. On top of that, loaders exist for pretty much any flavor of CSS you can think of â <a href="/loaders/postcss-loader">postcss</a>, <a href="/loaders/sass-loader">sass</a>, and <a href="/loaders/less-loader">less</a> to name a few.</p> <h2 id="loading-images">Loading Images<a href="#loading-images" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>So now we\'re pulling in our CSS, but what about our images like backgrounds and icons? As of webpack 5, using the built-in <a href="/guides/asset-modules/">Asset Modules</a> we can easily incorporate those in our system as well:</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const path = require(\'path\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">module.exports = {\n</span><span class="token prefix unchanged"> </span><span class="token line">  entry: \'./src/index.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">  output: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    filename: \'bundle.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">    path: path.resolve(__dirname, \'dist\'),\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">  module: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    rules: [\n</span><span class="token prefix unchanged"> </span><span class="token line">      {\n</span><span class="token prefix unchanged"> </span><span class="token line">        test: /\\.css$/i,\n</span><span class="token prefix unchanged"> </span><span class="token line">        use: [\'style-loader\', \'css-loader\'],\n</span><span class="token prefix unchanged"> </span><span class="token line">      },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">      {\n</span><span class="token prefix inserted">+</span><span class="token line">        test: /\\.(png|svg|jpg|jpeg|gif)$/i,\n</span><span class="token prefix inserted">+</span><span class="token line">        type: \'asset/resource\',\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    ],\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">};</span></span></code></pre> <p>Now, when you <code>import MyImage from \'./my-image.png\'</code>, that image will be processed and added to your <code>output</code> directory <em>and</em> the <code>MyImage</code> variable will contain the final url of that image after processing. When using the <a href="/loaders/css-loader">css-loader</a>, as shown above, a similar process will occur for <code>url(\'./my-image.png\')</code> within your CSS. The loader will recognize this is a local file, and replace the <code>\'./my-image.png\'</code> path with the final path to the image in your <code>output</code> directory. The <a href="/loaders/html-loader">html-loader</a> handles <code>&#x3C;img src="./my-image.png" /></code> in the same manner.</p> <p>Let\'s add an image to our project and see how this works, you can use any image you like:</p> <p><strong>project</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> webpack-demo\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- package.json\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- webpack.config.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /dist\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- bundle.js\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- index.html\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /src\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   |- icon.png\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   |- style.css\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- index.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /node_modules</span></span></code></pre> <p><strong>src/index.js</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import _ from \'lodash\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import \'./style.css\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import Icon from \'./icon.png\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">function component() {\n</span><span class="token prefix unchanged"> </span><span class="token line">  const element = document.createElement(\'div\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  // Lodash, now imported by this script\n</span><span class="token prefix unchanged"> </span><span class="token line">  element.innerHTML = _.join([\'Hello\', \'webpack\'], \' \');\n</span><span class="token prefix unchanged"> </span><span class="token line">  element.classList.add(\'hello\');\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  // Add the image to our existing div.\n</span><span class="token prefix inserted">+</span><span class="token line">  const myIcon = new Image();\n</span><span class="token prefix inserted">+</span><span class="token line">  myIcon.src = Icon;\n</span><span class="token prefix inserted">+</span><span class="token line">\n</span><span class="token prefix inserted">+</span><span class="token line">  element.appendChild(myIcon);\n</span><span class="token prefix inserted">+</span><span class="token line">\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return element;\n</span><span class="token prefix unchanged"> </span><span class="token line">}\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">document.body.appendChild(component());</span></span></code></pre> <p><strong>src/style.css</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">.hello {\n</span><span class="token prefix unchanged"> </span><span class="token line">  color: red;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  background: url(\'./icon.png\');\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">}</span></span></code></pre> <p>Let\'s create a new build and open up the <code>index.html</code> file again:</p> <pre><code class="hljs language-bash">$ <span class="token function">npm</span> run build\n\n<span class="token punctuation">..</span>.\n<span class="token punctuation">[</span>webpack-cli<span class="token punctuation">]</span> Compilation finished\nassets by status <span class="token number">9.88</span> KiB <span class="token punctuation">[</span>cached<span class="token punctuation">]</span> <span class="token number">1</span> asset\nasset bundle.js <span class="token number">73.4</span> KiB <span class="token punctuation">[</span>emitted<span class="token punctuation">]</span> <span class="token punctuation">[</span>minimized<span class="token punctuation">]</span> <span class="token punctuation">(</span>name: main<span class="token punctuation">)</span> <span class="token number">1</span> related asset\nruntime modules <span class="token number">1.82</span> KiB <span class="token number">6</span> modules\norphan modules <span class="token number">326</span> bytes <span class="token punctuation">[</span>orphan<span class="token punctuation">]</span> <span class="token number">1</span> module\ncacheable modules <span class="token number">540</span> KiB <span class="token punctuation">(</span>javascript<span class="token punctuation">)</span> <span class="token number">9.88</span> KiB <span class="token punctuation">(</span>asset<span class="token punctuation">)</span>\n  modules by path ./node_modules/ <span class="token number">539</span> KiB\n    modules by path ./node_modules/css-loader/dist/runtime/*.js <span class="token number">2.38</span> KiB\n      ./node_modules/css-loader/dist/runtime/api.js <span class="token number">1.57</span> KiB <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n      ./node_modules/css-loader/dist/runtime/getUrl.js <span class="token number">830</span> bytes <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n    ./node_modules/lodash/lodash.js <span class="token number">530</span> KiB <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n    ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js <span class="token number">6.67</span> KiB <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n  modules by path ./src/ <span class="token number">1.45</span> KiB <span class="token punctuation">(</span>javascript<span class="token punctuation">)</span> <span class="token number">9.88</span> KiB <span class="token punctuation">(</span>asset<span class="token punctuation">)</span>\n    ./src/index.js + <span class="token number">1</span> modules <span class="token number">794</span> bytes <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n    ./src/icon.png <span class="token number">42</span> bytes <span class="token punctuation">(</span>javascript<span class="token punctuation">)</span> <span class="token number">9.88</span> KiB <span class="token punctuation">(</span>asset<span class="token punctuation">)</span> <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n    ./node_modules/css-loader/dist/cjs.js<span class="token operator">!</span>./src/style.css <span class="token number">648</span> bytes <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\nwebpack <span class="token number">5.4</span>.0 compiled successfully <span class="token keyword">in</span> <span class="token number">1972</span> ms</code></pre> <p>If all went well, you should now see your icon as a repeating background, as well as an <code>img</code> element beside our <code>Hello webpack</code> text. If you inspect this element, you\'ll see that the actual filename has changed to something like <code>29822eaa871e8eadeaa4.png</code>. This means webpack found our file in the <code>src</code> folder and processed it!</p> <h2 id="loading-fonts">Loading Fonts<a href="#loading-fonts" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>So what about other assets like fonts? The Asset Modules will take any file you load through them and output it to your build directory. This means we can use them for any kind of file, including fonts. Let\'s update our <code>webpack.config.js</code> to handle font files:</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const path = require(\'path\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">module.exports = {\n</span><span class="token prefix unchanged"> </span><span class="token line">  entry: \'./src/index.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">  output: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    filename: \'bundle.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">    path: path.resolve(__dirname, \'dist\'),\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">  module: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    rules: [\n</span><span class="token prefix unchanged"> </span><span class="token line">      {\n</span><span class="token prefix unchanged"> </span><span class="token line">        test: /\\.css$/i,\n</span><span class="token prefix unchanged"> </span><span class="token line">        use: [\'style-loader\', \'css-loader\'],\n</span><span class="token prefix unchanged"> </span><span class="token line">      },\n</span><span class="token prefix unchanged"> </span><span class="token line">      {\n</span><span class="token prefix unchanged"> </span><span class="token line">        test: /\\.(png|svg|jpg|jpeg|gif)$/i,\n</span><span class="token prefix unchanged"> </span><span class="token line">        type: \'asset/resource\',\n</span><span class="token prefix unchanged"> </span><span class="token line">      },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">      {\n</span><span class="token prefix inserted">+</span><span class="token line">        test: /\\.(woff|woff2|eot|ttf|otf)$/i,\n</span><span class="token prefix inserted">+</span><span class="token line">        type: \'asset/resource\',\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    ],\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">};</span></span></code></pre> <p>Add some font files to your project:</p> <p><strong>project</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> webpack-demo\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- package.json\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- webpack.config.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /dist\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- bundle.js\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- index.html\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /src\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   |- my-font.woff\n</span><span class="token prefix inserted">+</span><span class="token line">   |- my-font.woff2\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   |- icon.png\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- style.css\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- index.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /node_modules</span></span></code></pre> <p>With the loader configured and fonts in place, you can incorporate them via an <code>@font-face</code> declaration. The local <code>url(...)</code> directive will be picked up by webpack just as it was with the image:</p> <p><strong>src/style.css</strong></p> <pre><code class="hljs language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">@font-face {\n</span><span class="token prefix inserted">+</span><span class="token line">  font-family: \'MyFont\';\n</span><span class="token prefix inserted">+</span><span class="token line">  src: url(\'./my-font.woff2\') format(\'woff2\'),\n</span><span class="token prefix inserted">+</span><span class="token line">    url(\'./my-font.woff\') format(\'woff\');\n</span><span class="token prefix inserted">+</span><span class="token line">  font-weight: 600;\n</span><span class="token prefix inserted">+</span><span class="token line">  font-style: normal;\n</span><span class="token prefix inserted">+</span><span class="token line">}\n</span><span class="token prefix inserted">+</span><span class="token line">\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">.hello {\n</span><span class="token prefix unchanged"> </span><span class="token line">  color: red;\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  font-family: \'MyFont\';\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  background: url(\'./icon.png\');\n</span><span class="token prefix unchanged"> </span><span class="token line">}</span></span></code></pre> <p>Now run a new build and let\'s see if webpack handled our fonts:</p> <pre><code class="hljs language-bash">$ <span class="token function">npm</span> run build\n\n<span class="token punctuation">..</span>.\n<span class="token punctuation">[</span>webpack-cli<span class="token punctuation">]</span> Compilation finished\nassets by status <span class="token number">9.88</span> KiB <span class="token punctuation">[</span>cached<span class="token punctuation">]</span> <span class="token number">1</span> asset\nassets by info <span class="token number">33.2</span> KiB <span class="token punctuation">[</span>immutable<span class="token punctuation">]</span>\n  asset 55055dbfc7c6a83f60ba.woff <span class="token number">18.8</span> KiB <span class="token punctuation">[</span>emitted<span class="token punctuation">]</span> <span class="token punctuation">[</span>immutable<span class="token punctuation">]</span> <span class="token punctuation">[</span>from: src/my-font.woff<span class="token punctuation">]</span> <span class="token punctuation">(</span>auxiliary name: main<span class="token punctuation">)</span>\n  asset 8f717b802eaab4d7fb94.woff2 <span class="token number">14.5</span> KiB <span class="token punctuation">[</span>emitted<span class="token punctuation">]</span> <span class="token punctuation">[</span>immutable<span class="token punctuation">]</span> <span class="token punctuation">[</span>from: src/my-font.woff2<span class="token punctuation">]</span> <span class="token punctuation">(</span>auxiliary name: main<span class="token punctuation">)</span>\nasset bundle.js <span class="token number">73.7</span> KiB <span class="token punctuation">[</span>emitted<span class="token punctuation">]</span> <span class="token punctuation">[</span>minimized<span class="token punctuation">]</span> <span class="token punctuation">(</span>name: main<span class="token punctuation">)</span> <span class="token number">1</span> related asset\nruntime modules <span class="token number">1.82</span> KiB <span class="token number">6</span> modules\norphan modules <span class="token number">326</span> bytes <span class="token punctuation">[</span>orphan<span class="token punctuation">]</span> <span class="token number">1</span> module\ncacheable modules <span class="token number">541</span> KiB <span class="token punctuation">(</span>javascript<span class="token punctuation">)</span> <span class="token number">43.1</span> KiB <span class="token punctuation">(</span>asset<span class="token punctuation">)</span>\n  javascript modules <span class="token number">541</span> KiB\n    modules by path ./node_modules/ <span class="token number">539</span> KiB\n      modules by path ./node_modules/css-loader/dist/runtime/*.js <span class="token number">2.38</span> KiB <span class="token number">2</span> modules\n      ./node_modules/lodash/lodash.js <span class="token number">530</span> KiB <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n      ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js <span class="token number">6.67</span> KiB <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n    modules by path ./src/ <span class="token number">1.98</span> KiB\n      ./src/index.js + <span class="token number">1</span> modules <span class="token number">794</span> bytes <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n      ./node_modules/css-loader/dist/cjs.js<span class="token operator">!</span>./src/style.css <span class="token number">1.21</span> KiB <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n  asset modules <span class="token number">126</span> bytes <span class="token punctuation">(</span>javascript<span class="token punctuation">)</span> <span class="token number">43.1</span> KiB <span class="token punctuation">(</span>asset<span class="token punctuation">)</span>\n    ./src/icon.png <span class="token number">42</span> bytes <span class="token punctuation">(</span>javascript<span class="token punctuation">)</span> <span class="token number">9.88</span> KiB <span class="token punctuation">(</span>asset<span class="token punctuation">)</span> <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n    ./src/my-font.woff2 <span class="token number">42</span> bytes <span class="token punctuation">(</span>javascript<span class="token punctuation">)</span> <span class="token number">14.5</span> KiB <span class="token punctuation">(</span>asset<span class="token punctuation">)</span> <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\n    ./src/my-font.woff <span class="token number">42</span> bytes <span class="token punctuation">(</span>javascript<span class="token punctuation">)</span> <span class="token number">18.8</span> KiB <span class="token punctuation">(</span>asset<span class="token punctuation">)</span> <span class="token punctuation">[</span>built<span class="token punctuation">]</span> <span class="token punctuation">[</span>code generated<span class="token punctuation">]</span>\nwebpack <span class="token number">5.4</span>.0 compiled successfully <span class="token keyword">in</span> <span class="token number">2142</span> ms</code></pre> <p>Open up <code>dist/index.html</code> again and see if our <code>Hello webpack</code> text has changed to the new font. If all is well, you should see the changes.</p> <h2 id="loading-data">Loading Data<a href="#loading-data" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>Another useful asset that can be loaded is data, like JSON files, CSVs, TSVs, and XML. Support for JSON is actually built-in, similar to NodeJS, meaning <code>import Data from \'./data.json\'</code> will work by default. To import CSVs, TSVs, and XML you could use the <a href="https://github.com/theplatapi/csv-loader">csv-loader</a> and <a href="https://github.com/gisikw/xml-loader">xml-loader</a>. Let\'s handle loading all three:</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev csv-loader xml-loader</code></pre> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const path = require(\'path\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">module.exports = {\n</span><span class="token prefix unchanged"> </span><span class="token line">  entry: \'./src/index.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">  output: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    filename: \'bundle.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">    path: path.resolve(__dirname, \'dist\'),\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">  module: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    rules: [\n</span><span class="token prefix unchanged"> </span><span class="token line">      {\n</span><span class="token prefix unchanged"> </span><span class="token line">        test: /\\.css$/i,\n</span><span class="token prefix unchanged"> </span><span class="token line">        use: [\'style-loader\', \'css-loader\'],\n</span><span class="token prefix unchanged"> </span><span class="token line">      },\n</span><span class="token prefix unchanged"> </span><span class="token line">      {\n</span><span class="token prefix unchanged"> </span><span class="token line">        test: /\\.(png|svg|jpg|jpeg|gif)$/i,\n</span><span class="token prefix unchanged"> </span><span class="token line">        type: \'asset/resource\',\n</span><span class="token prefix unchanged"> </span><span class="token line">      },\n</span><span class="token prefix unchanged"> </span><span class="token line">      {\n</span><span class="token prefix unchanged"> </span><span class="token line">        test: /\\.(woff|woff2|eot|ttf|otf)$/i,\n</span><span class="token prefix unchanged"> </span><span class="token line">        type: \'asset/resource\',\n</span><span class="token prefix unchanged"> </span><span class="token line">      },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">      {\n</span><span class="token prefix inserted">+</span><span class="token line">        test: /\\.(csv|tsv)$/i,\n</span><span class="token prefix inserted">+</span><span class="token line">        use: [\'csv-loader\'],\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span><span class="token prefix inserted">+</span><span class="token line">      {\n</span><span class="token prefix inserted">+</span><span class="token line">        test: /\\.xml$/i,\n</span><span class="token prefix inserted">+</span><span class="token line">        use: [\'xml-loader\'],\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    ],\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">};</span></span></code></pre> <p>Add some data files to your project:</p> <p><strong>project</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> webpack-demo\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- package.json\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- webpack.config.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /dist\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- bundle.js\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- index.html\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /src\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   |- data.xml\n</span><span class="token prefix inserted">+</span><span class="token line">   |- data.csv\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   |- my-font.woff\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- my-font.woff2\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- icon.png\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- style.css\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- index.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /node_modules</span></span></code></pre> <p><strong>src/data.xml</strong></p> <pre><code class="hljs language-xml"><span class="token prolog">&#x3C;?xml version="1.0" encoding="UTF-8"?></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>note</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>to</span><span class="token punctuation">></span></span>Mary<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>to</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>from</span><span class="token punctuation">></span></span>John<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>from</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>heading</span><span class="token punctuation">></span></span>Reminder<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>heading</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>body</span><span class="token punctuation">></span></span>Call Cindy on Tuesday<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>note</span><span class="token punctuation">></span></span></code></pre> <p><strong>src/data.csv</strong></p> <pre><code class="hljs language-csv">to,from,heading,body\nMary,John,Reminder,Call Cindy on Tuesday\nZoe,Bill,Reminder,Buy orange juice\nAutumn,Lindsey,Letter,I miss you\n</code></pre> <p>Now you can <code>import</code> any one of those four types of data (JSON, CSV, TSV, XML) and the <code>Data</code> variable you import, will contain parsed JSON for easy consumption:</p> <p><strong>src/index.js</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import _ from \'lodash\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import \'./style.css\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import Icon from \'./icon.png\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import Data from \'./data.xml\';\n</span><span class="token prefix inserted">+</span><span class="token line">import Notes from \'./data.csv\';\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">function component() {\n</span><span class="token prefix unchanged"> </span><span class="token line">  const element = document.createElement(\'div\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  // Lodash, now imported by this script\n</span><span class="token prefix unchanged"> </span><span class="token line">  element.innerHTML = _.join([\'Hello\', \'webpack\'], \' \');\n</span><span class="token prefix unchanged"> </span><span class="token line">  element.classList.add(\'hello\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  // Add the image to our existing div.\n</span><span class="token prefix unchanged"> </span><span class="token line">  const myIcon = new Image();\n</span><span class="token prefix unchanged"> </span><span class="token line">  myIcon.src = Icon;\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  element.appendChild(myIcon);\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  console.log(Data);\n</span><span class="token prefix inserted">+</span><span class="token line">  console.log(Notes);\n</span><span class="token prefix inserted">+</span><span class="token line">\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return element;\n</span><span class="token prefix unchanged"> </span><span class="token line">}\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">document.body.appendChild(component());</span></span></code></pre> <p>Re-run the <code>npm run build</code> command and open <code>dist/index.html</code>. If you look at the console in your developer tools, you should be able to see your imported data being logged to the console!</p> <aside class="tip"><h6 class="tip__prefix">tip</h6><p>This can be especially helpful when implementing some sort of data visualization using a tool like <a href="https://github.com/d3">d3</a>. Instead of making an ajax request and parsing the data at runtime you can load it into your module during the build process so that the parsed data is ready to go as soon as the module hits the browser.</p></aside> <aside class="warning"><h6 class="warning__prefix">warning</h6><p>Only the default export of JSON modules can be used without warning.</p></aside> <pre><code class="hljs language-javascript"><span class="token comment">// No warning</span>\n<span class="token keyword">import</span> data <span class="token keyword">from</span> <span class="token string">\'./data.json\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Warning shown, this is not allowed by the spec.</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./data.json\'</span><span class="token punctuation">;</span></code></pre> <h3 id="customize-parser-of-json-modules">Customize parser of JSON modules<a href="#customize-parser-of-json-modules" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>It\'s possible to import any <code>toml</code>, <code>yaml</code> or <code>json5</code> files as a JSON module by using a <a href="/configuration/module/#ruleparserparse">custom parser</a> instead of a specific webpack loader.</p> <p>Let\'s say you have a <code>data.toml</code>, a <code>data.yaml</code> and a <code>data.json5</code> files under <code>src</code> folder:</p> <p><strong>src/data.toml</strong></p> <pre><code class="hljs language-toml">title = "TOML Example"\n\n[owner]\nname = "Tom Preston-Werner"\norganization = "GitHub"\nbio = "GitHub Cofounder &#x26; CEO\\nLikes tater tots and beer."\ndob = 1979-05-27T07:32:00Z\n</code></pre> <p><strong>src/data.yaml</strong></p> <pre><code class="hljs language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> YAML Example\n<span class="token key atrule">owner</span><span class="token punctuation">:</span>\n  <span class="token key atrule">name</span><span class="token punctuation">:</span> Tom Preston<span class="token punctuation">-</span>Werner\n  <span class="token key atrule">organization</span><span class="token punctuation">:</span> GitHub\n  <span class="token key atrule">bio</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token punctuation">-</span>\n    GitHub Cofounder &#x26; CEO\n    Likes tater tots and beer.\n  <span class="token key atrule">dob</span><span class="token punctuation">:</span> <span class="token datetime number">1979-05-27T07:32:00.000Z</span></code></pre> <p><strong>src/data.json5</strong></p> <pre><code class="hljs language-json5">{\n  // comment\n  title: \'JSON5 Example\',\n  owner: {\n    name: \'Tom Preston-Werner\',\n    organization: \'GitHub\',\n    bio: \'GitHub Cofounder &#x26; CEO\\n\\\nLikes tater tots and beer.\',\n    dob: \'1979-05-27T07:32:00.000Z\',\n  },\n}\n</code></pre> <p>Install <code>toml</code>, <code>yamljs</code> and <code>json5</code> packages first:</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> toml yamljs json5 --save-dev</code></pre> <p>And configure them in your webpack configuration:</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const path = require(\'path\');\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">const toml = require(\'toml\');\n</span><span class="token prefix inserted">+</span><span class="token line">const yaml = require(\'yamljs\');\n</span><span class="token prefix inserted">+</span><span class="token line">const json5 = require(\'json5\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">module.exports = {\n</span><span class="token prefix unchanged"> </span><span class="token line">  entry: \'./src/index.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">  output: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    filename: \'bundle.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">    path: path.resolve(__dirname, \'dist\'),\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">  module: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    rules: [\n</span><span class="token prefix unchanged"> </span><span class="token line">      {\n</span><span class="token prefix unchanged"> </span><span class="token line">        test: /\\.css$/i,\n</span><span class="token prefix unchanged"> </span><span class="token line">        use: [\'style-loader\', \'css-loader\'],\n</span><span class="token prefix unchanged"> </span><span class="token line">      },\n</span><span class="token prefix unchanged"> </span><span class="token line">      {\n</span><span class="token prefix unchanged"> </span><span class="token line">        test: /\\.(png|svg|jpg|jpeg|gif)$/i,\n</span><span class="token prefix unchanged"> </span><span class="token line">        type: \'asset/resource\',\n</span><span class="token prefix unchanged"> </span><span class="token line">      },\n</span><span class="token prefix unchanged"> </span><span class="token line">      {\n</span><span class="token prefix unchanged"> </span><span class="token line">        test: /\\.(woff|woff2|eot|ttf|otf)$/i,\n</span><span class="token prefix unchanged"> </span><span class="token line">        type: \'asset/resource\',\n</span><span class="token prefix unchanged"> </span><span class="token line">      },\n</span><span class="token prefix unchanged"> </span><span class="token line">      {\n</span><span class="token prefix unchanged"> </span><span class="token line">        test: /\\.(csv|tsv)$/i,\n</span><span class="token prefix unchanged"> </span><span class="token line">        use: [\'csv-loader\'],\n</span><span class="token prefix unchanged"> </span><span class="token line">      },\n</span><span class="token prefix unchanged"> </span><span class="token line">      {\n</span><span class="token prefix unchanged"> </span><span class="token line">        test: /\\.xml$/i,\n</span><span class="token prefix unchanged"> </span><span class="token line">        use: [\'xml-loader\'],\n</span><span class="token prefix unchanged"> </span><span class="token line">      },\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">      {\n</span><span class="token prefix inserted">+</span><span class="token line">        test: /\\.toml$/i,\n</span><span class="token prefix inserted">+</span><span class="token line">        type: \'json\',\n</span><span class="token prefix inserted">+</span><span class="token line">        parser: {\n</span><span class="token prefix inserted">+</span><span class="token line">          parse: toml.parse,\n</span><span class="token prefix inserted">+</span><span class="token line">        },\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span><span class="token prefix inserted">+</span><span class="token line">      {\n</span><span class="token prefix inserted">+</span><span class="token line">        test: /\\.yaml$/i,\n</span><span class="token prefix inserted">+</span><span class="token line">        type: \'json\',\n</span><span class="token prefix inserted">+</span><span class="token line">        parser: {\n</span><span class="token prefix inserted">+</span><span class="token line">          parse: yaml.parse,\n</span><span class="token prefix inserted">+</span><span class="token line">        },\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span><span class="token prefix inserted">+</span><span class="token line">      {\n</span><span class="token prefix inserted">+</span><span class="token line">        test: /\\.json5$/i,\n</span><span class="token prefix inserted">+</span><span class="token line">        type: \'json\',\n</span><span class="token prefix inserted">+</span><span class="token line">        parser: {\n</span><span class="token prefix inserted">+</span><span class="token line">          parse: json5.parse,\n</span><span class="token prefix inserted">+</span><span class="token line">        },\n</span><span class="token prefix inserted">+</span><span class="token line">      },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">    ],\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span><span class="token prefix unchanged"> </span><span class="token line">};</span></span></code></pre> <p><strong>src/index.js</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import _ from \'lodash\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import \'./style.css\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import Icon from \'./icon.png\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import Data from \'./data.xml\';\n</span><span class="token prefix unchanged"> </span><span class="token line">import Notes from \'./data.csv\';\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">import toml from \'./data.toml\';\n</span><span class="token prefix inserted">+</span><span class="token line">import yaml from \'./data.yaml\';\n</span><span class="token prefix inserted">+</span><span class="token line">import json from \'./data.json5\';\n</span><span class="token prefix inserted">+</span><span class="token line">\n</span><span class="token prefix inserted">+</span><span class="token line">console.log(toml.title); // output `TOML Example`\n</span><span class="token prefix inserted">+</span><span class="token line">console.log(toml.owner.name); // output `Tom Preston-Werner`\n</span><span class="token prefix inserted">+</span><span class="token line">\n</span><span class="token prefix inserted">+</span><span class="token line">console.log(yaml.title); // output `YAML Example`\n</span><span class="token prefix inserted">+</span><span class="token line">console.log(yaml.owner.name); // output `Tom Preston-Werner`\n</span><span class="token prefix inserted">+</span><span class="token line">\n</span><span class="token prefix inserted">+</span><span class="token line">console.log(json.title); // output `JSON5 Example`\n</span><span class="token prefix inserted">+</span><span class="token line">console.log(json.owner.name); // output `Tom Preston-Werner`\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">function component() {\n</span><span class="token prefix unchanged"> </span><span class="token line">  const element = document.createElement(\'div\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  // Lodash, now imported by this script\n</span><span class="token prefix unchanged"> </span><span class="token line">  element.innerHTML = _.join([\'Hello\', \'webpack\'], \' \');\n</span><span class="token prefix unchanged"> </span><span class="token line">  element.classList.add(\'hello\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  // Add the image to our existing div.\n</span><span class="token prefix unchanged"> </span><span class="token line">  const myIcon = new Image();\n</span><span class="token prefix unchanged"> </span><span class="token line">  myIcon.src = Icon;\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  element.appendChild(myIcon);\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  console.log(Data);\n</span><span class="token prefix unchanged"> </span><span class="token line">  console.log(Notes);\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return element;\n</span><span class="token prefix unchanged"> </span><span class="token line">}\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">document.body.appendChild(component());</span></span></code></pre> <p>Re-run the <code>npm run build</code> command and open <code>dist/index.html</code>. You should be able to see your imported data being logged to the console!</p> <h2 id="global-assets">Global Assets<a href="#global-assets" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>The coolest part of everything mentioned above, is that loading assets this way allows you to group modules and assets in a more intuitive way. Instead of relying on a global <code>/assets</code> directory that contains everything, you can group assets with the code that uses them. For example, a structure like this can be useful:</p> <pre><code class="hljs language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> |- /assets\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> |â /components\n</span><span class="token prefix inserted">+</span><span class="token line"> |  |â /my-component\n</span><span class="token prefix inserted">+</span><span class="token line"> |  |  |â index.jsx\n</span><span class="token prefix inserted">+</span><span class="token line"> |  |  |â index.css\n</span><span class="token prefix inserted">+</span><span class="token line"> |  |  |â icon.svg\n</span><span class="token prefix inserted">+</span><span class="token line"> |  |  |â img.png</span></span></code></pre> <p>This setup makes your code a lot more portable as everything that is closely coupled now lives together. Let\'s say you want to use <code>/my-component</code> in another project, simply copy or move it into the <code>/components</code> directory over there. As long as you\'ve installed any <em>external dependencies</em> and your <em>configuration has the same loaders</em> defined, you should be good to go.</p> <p>However, let\'s say you\'re locked into your old ways or you have some assets that are shared between multiple components (views, templates, modules, etc.). It\'s still possible to store these assets in a base directory and even use <a href="/configuration/resolve/#resolvealias">aliasing</a> to make them easier to <code>import</code>.</p> <h2 id="wrapping-up">Wrapping up<a href="#wrapping-up" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>For the next guides we won\'t be using all the different assets we\'ve used in this guide, so let\'s do some cleanup so we\'re prepared for the next piece of the guides <a href="https://webpack.js.org/guides/output-management/">Output Management</a>:</p> <p><strong>project</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> webpack-demo\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- package.json\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- webpack.config.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /dist\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- bundle.js\n</span><span class="token prefix unchanged"> </span><span class="token line">   |- index.html\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /src\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">   |- data.csv\n</span><span class="token prefix deleted">-</span><span class="token line">   |- data.json5\n</span><span class="token prefix deleted">-</span><span class="token line">   |- data.toml\n</span><span class="token prefix deleted">-</span><span class="token line">   |- data.xml\n</span><span class="token prefix deleted">-</span><span class="token line">   |- data.yaml\n</span><span class="token prefix deleted">-</span><span class="token line">   |- icon.png\n</span><span class="token prefix deleted">-</span><span class="token line">   |- my-font.woff\n</span><span class="token prefix deleted">-</span><span class="token line">   |- my-font.woff2\n</span><span class="token prefix deleted">-</span><span class="token line">   |- style.css\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   |- index.js\n</span><span class="token prefix unchanged"> </span><span class="token line"> |- /node_modules</span></span></code></pre> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">const path = require(\'path\');\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">const toml = require(\'toml\');\n</span><span class="token prefix deleted">-</span><span class="token line">const yaml = require(\'yamljs\');\n</span><span class="token prefix deleted">-</span><span class="token line">const json5 = require(\'json5\');\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">module.exports = {\n</span><span class="token prefix unchanged"> </span><span class="token line">  entry: \'./src/index.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">  output: {\n</span><span class="token prefix unchanged"> </span><span class="token line">    filename: \'bundle.js\',\n</span><span class="token prefix unchanged"> </span><span class="token line">    path: path.resolve(__dirname, \'dist\'),\n</span><span class="token prefix unchanged"> </span><span class="token line">  },\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  module: {\n</span><span class="token prefix deleted">-</span><span class="token line">    rules: [\n</span><span class="token prefix deleted">-</span><span class="token line">      {\n</span><span class="token prefix deleted">-</span><span class="token line">        test: /\\.css$/i,\n</span><span class="token prefix deleted">-</span><span class="token line">        use: [\'style-loader\', \'css-loader\'],\n</span><span class="token prefix deleted">-</span><span class="token line">      },\n</span><span class="token prefix deleted">-</span><span class="token line">      {\n</span><span class="token prefix deleted">-</span><span class="token line">        test: /\\.(png|svg|jpg|jpeg|gif)$/i,\n</span><span class="token prefix deleted">-</span><span class="token line">        type: \'asset/resource\',\n</span><span class="token prefix deleted">-</span><span class="token line">      },\n</span><span class="token prefix deleted">-</span><span class="token line">      {\n</span><span class="token prefix deleted">-</span><span class="token line">        test: /\\.(woff|woff2|eot|ttf|otf)$/i,\n</span><span class="token prefix deleted">-</span><span class="token line">        type: \'asset/resource\',\n</span><span class="token prefix deleted">-</span><span class="token line">      },\n</span><span class="token prefix deleted">-</span><span class="token line">      {\n</span><span class="token prefix deleted">-</span><span class="token line">        test: /\\.(csv|tsv)$/i,\n</span><span class="token prefix deleted">-</span><span class="token line">        use: [\'csv-loader\'],\n</span><span class="token prefix deleted">-</span><span class="token line">      },\n</span><span class="token prefix deleted">-</span><span class="token line">      {\n</span><span class="token prefix deleted">-</span><span class="token line">        test: /\\.xml$/i,\n</span><span class="token prefix deleted">-</span><span class="token line">        use: [\'xml-loader\'],\n</span><span class="token prefix deleted">-</span><span class="token line">      },\n</span><span class="token prefix deleted">-</span><span class="token line">      {\n</span><span class="token prefix deleted">-</span><span class="token line">        test: /\\.toml$/i,\n</span><span class="token prefix deleted">-</span><span class="token line">        type: \'json\',\n</span><span class="token prefix deleted">-</span><span class="token line">        parser: {\n</span><span class="token prefix deleted">-</span><span class="token line">          parse: toml.parse,\n</span><span class="token prefix deleted">-</span><span class="token line">        },\n</span><span class="token prefix deleted">-</span><span class="token line">      },\n</span><span class="token prefix deleted">-</span><span class="token line">      {\n</span><span class="token prefix deleted">-</span><span class="token line">        test: /\\.yaml$/i,\n</span><span class="token prefix deleted">-</span><span class="token line">        type: \'json\',\n</span><span class="token prefix deleted">-</span><span class="token line">        parser: {\n</span><span class="token prefix deleted">-</span><span class="token line">          parse: yaml.parse,\n</span><span class="token prefix deleted">-</span><span class="token line">        },\n</span><span class="token prefix deleted">-</span><span class="token line">      },\n</span><span class="token prefix deleted">-</span><span class="token line">      {\n</span><span class="token prefix deleted">-</span><span class="token line">        test: /\\.json5$/i,\n</span><span class="token prefix deleted">-</span><span class="token line">        type: \'json\',\n</span><span class="token prefix deleted">-</span><span class="token line">        parser: {\n</span><span class="token prefix deleted">-</span><span class="token line">          parse: json5.parse,\n</span><span class="token prefix deleted">-</span><span class="token line">        },\n</span><span class="token prefix deleted">-</span><span class="token line">      },\n</span><span class="token prefix deleted">-</span><span class="token line">    ],\n</span><span class="token prefix deleted">-</span><span class="token line">  },\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">};</span></span></code></pre> <p><strong>src/index.js</strong></p> <pre><code class="hljs language-diff"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">import _ from \'lodash\';\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">import \'./style.css\';\n</span><span class="token prefix deleted">-</span><span class="token line">import Icon from \'./icon.png\';\n</span><span class="token prefix deleted">-</span><span class="token line">import Data from \'./data.xml\';\n</span><span class="token prefix deleted">-</span><span class="token line">import Notes from \'./data.csv\';\n</span><span class="token prefix deleted">-</span><span class="token line">import toml from \'./data.toml\';\n</span><span class="token prefix deleted">-</span><span class="token line">import yaml from \'./data.yaml\';\n</span><span class="token prefix deleted">-</span><span class="token line">import json from \'./data.json5\';\n</span><span class="token prefix deleted">-</span><span class="token line">\n</span><span class="token prefix deleted">-</span><span class="token line">console.log(toml.title); // output `TOML Example`\n</span><span class="token prefix deleted">-</span><span class="token line">console.log(toml.owner.name); // output `Tom Preston-Werner`\n</span><span class="token prefix deleted">-</span><span class="token line">\n</span><span class="token prefix deleted">-</span><span class="token line">console.log(yaml.title); // output `YAML Example`\n</span><span class="token prefix deleted">-</span><span class="token line">console.log(yaml.owner.name); // output `Tom Preston-Werner`\n</span><span class="token prefix deleted">-</span><span class="token line">\n</span><span class="token prefix deleted">-</span><span class="token line">console.log(json.title); // output `JSON5 Example`\n</span><span class="token prefix deleted">-</span><span class="token line">console.log(json.owner.name); // output `Tom Preston-Werner`\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">function component() {\n</span><span class="token prefix unchanged"> </span><span class="token line">  const element = document.createElement(\'div\');\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  // Lodash, now imported by this script\n</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  element.innerHTML = _.join([\'Hello\', \'webpack\'], \' \');\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  element.classList.add(\'hello\');\n</span><span class="token prefix deleted">-</span><span class="token line">\n</span><span class="token prefix deleted">-</span><span class="token line">  // Add the image to our existing div.\n</span><span class="token prefix deleted">-</span><span class="token line">  const myIcon = new Image();\n</span><span class="token prefix deleted">-</span><span class="token line">  myIcon.src = Icon;\n</span><span class="token prefix deleted">-</span><span class="token line">\n</span><span class="token prefix deleted">-</span><span class="token line">  element.appendChild(myIcon);\n</span><span class="token prefix deleted">-</span><span class="token line">\n</span><span class="token prefix deleted">-</span><span class="token line">  console.log(Data);\n</span><span class="token prefix deleted">-</span><span class="token line">  console.log(Notes);\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  return element;\n</span><span class="token prefix unchanged"> </span><span class="token line">}\n</span></span>\n<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">document.body.appendChild(component());</span></span></code></pre> <p>And remove those dependencies we added before:</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> uninstall css-loader csv-loader json5 style-loader toml xml-loader yamljs</code></pre> <h2 id="next-guide">Next guide<a href="#next-guide" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>Let\'s move on to <a href="https://webpack.js.org/guides/output-management/">Output Management</a></p> <h2 id="further-reading">Further Reading<a href="#further-reading" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="https://survivejs.com/webpack/loading/fonts/">Loading Fonts</a> on SurviveJS</li> </ul> '}}]);